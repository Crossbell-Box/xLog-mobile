name: Staging

on:
  push:
    branches:
      - staging

jobs:
  update:
    name: Staging
    runs-on: ubuntu-latest
    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets. Learn more: https://docs.expo.dev/eas-update/github-actions"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Create env file
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env.common

      - name: Install dependencies
        run: yarn install
        
      # Fetch the main branch for the changeset check
      - name: Fetch main branch
        run: |
          git fetch origin main:main

      # If there are patch changesets, we want to publish them hot updates.
      # If there are minor or major changesets, we want to publish them as new builds.
      - name: Publish update
        env:
          NODE_OPTIONS: --max_old_space_size=4096
        run: |
          set +e
          CHANGESET_STATUS_OUTPUT=$(yarn changeset status)
          set -e

          PATCH_CHANGESET_COUNT=$(echo "$CHANGESET_STATUS_OUTPUT" | grep -c "info Packages to be bumped at patch" || true)
          MINOR_CHANGESET_COUNT=$(echo "$CHANGESET_STATUS_OUTPUT" | grep -c "info Packages to be bumped at minor" || true)
          MAJOR_CHANGESET_COUNT=$(echo "$CHANGESET_STATUS_OUTPUT" | grep -c "info Packages to be bumped at major" || true)

          echo $PATCH_CHANGESET_COUNT
          echo $MINOR_CHANGESET_COUNT
          echo $MAJOR_CHANGESET_COUNT

          if [ $MINOR_CHANGESET_COUNT -eq 1 ] || [ $MAJOR_CHANGESET_COUNT -eq 1 ]; then
              yarn changeset version
              eas build --non-interactive --profile preview -p all --no-wait
          else
              if [ $PATCH_CHANGESET_COUNT -eq 1 ] ; then
                  echo "Only patch changeset found, executing update."
                  eas update --branch staging --auto
              else
                  echo "No patch-only changeset found, skipping update."
              fi
          fi